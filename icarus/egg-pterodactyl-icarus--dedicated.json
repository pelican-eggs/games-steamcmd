{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "update_url": null,
        "version": "PTDL_v2"
    },
    "exported_at": "2024-06-01T00:03:56+00:00",
    "name": "Icarus-Dedicated",
    "author": "bolverblitz@ebg.pw",
    "uuid": "7f2f0676-3d0c-457f-a3aa-b2af40966698",
    "description": "Icarus is a survival game that with dedicated servers as a public beta",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "Wine Staging": "ghcr.io/parkervcp/yolks:wine_latest"
    },
    "file_denylist": [],
    "startup": "wine64 ./Icarus/Binaries/Win64/IcarusServer-Win64-Shipping.exe -Log -SteamServerName=${SERVER_NAME} -PORT=\"${SERVER_PORT}\" -QueryPort=\"${QUERY_PORT}\"",
    "config": {
        "files": "{}",
        "logs": "{}",
        "startup": "{\r\n    \"done\": \"(Engine Initialization) Total time:\"\r\n}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "container": "ghcr.io/parkervcp/installers:debian",
            "entrypoint": "/bin/bash",
            "script": "#!/bin/bash\r\n\r\n## License: MIT License\r\n## Image to install with is 'ghcr.io/parkervcp/installers:debian'\r\n\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd /tmp\r\nmkdir -p /mnt/server/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C /mnt/server/steamcmd\r\nmkdir -p /mnt/server/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd /mnt/server/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root /mnt\r\nexport HOME=/mnt/server\r\n\r\n## install game using steamcmd\r\n./steamcmd.sh +force_install_dir /mnt/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] \u0026\u0026 printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} validate +quit\r\n\r\n## set up 32 bit libraries\r\nmkdir -p /mnt/server/.steam/sdk32\r\ncp -v linux32/steamclient.so ../.steam/sdk32/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p /mnt/server/.steam/sdk64\r\ncp -v linux64/steamclient.so ../.steam/sdk64/steamclient.so\r\n\r\nFILE=/mnt/server/Icarus/Saved/Config/ServerSettings.ini\r\nif [ -f \"$FILE\" ]; then\r\n    echo \"Config already exist skipping\"\r\nelse \r\n    echo \"Config does not yet exist, making one\"\r\n    mkdir -p /mnt/server/Icarus/Saved/Config/\r\n    cd /mnt/server/Icarus/Saved/Config/\r\n    curl -sSL -o ServerSettings.ini https://raw.githubusercontent.com/RocketWerkz/IcarusDedicatedServer/main/ServerSettings.ini\r\nfi\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\""
        }
    },
    "variables": [
        {
            "name": "[REQUIRED] Server Query Port",
            "description": "UDP port for Steam server list features.",
            "env_variable": "QUERY_PORT",
            "default_value": "27015",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|between:1024,65536",
            "field_type": "text"
        },
        {
            "name": "Server Name",
            "description": "",
            "env_variable": "SERVER_NAME",
            "default_value": "IcarusEGG",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:32",
            "field_type": "text"
        },
        {
            "name": "Windows Install Flag",
            "description": "Required for windows game server installs",
            "env_variable": "WINDOWS_INSTALL",
            "default_value": "1",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "WINETRICKS_RUN",
            "description": "Run installs on software that is required by the server",
            "env_variable": "WINETRICKS_RUN",
            "default_value": "vcrun2019 corefonts",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:vcrun2019 corefonts",
            "field_type": "text"
        },
        {
            "name": "SRCDS_APPID",
            "description": "steam app id found here - https://developer.valvesoftware.com/wiki/Dedicated_Servers_List",
            "env_variable": "SRCDS_APPID",
            "default_value": "2089300",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:2089300",
            "field_type": "text"
        },
        {
            "name": "AUTO_UPDATE",
            "description": "Disabling or enabling automated updates on boot",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "WINEDEBUG",
            "description": "",
            "env_variable": "WINEDEBUG",
            "default_value": "-all",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "WINEPATH",
            "description": "",
            "env_variable": "WINEPATH",
            "default_value": "/home/container",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "WINEARCH",
            "description": "",
            "env_variable": "WINEARCH",
            "default_value": "win64",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:win64",
            "field_type": "text"
        }
    ]
}