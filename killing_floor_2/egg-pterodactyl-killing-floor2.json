{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "update_url": null,
        "version": "PTDL_v2"
    },
    "exported_at": "2024-06-01T00:03:57+00:00",
    "name": "Killing Floor 2",
    "author": "parker@parkervcp.com",
    "uuid": "1c46cac5-9cca-414c-9a72-244372ac7efc",
    "description": "In KILLING FLOOR 2, players descend into continental Europe after it has been overrun by horrific, murderous clones called Zeds that were created by the corporation Horzine. The Zed outbreak caused by Horzine Biotechâ€™s failed experiments has quickly spread with unstoppable momentum, paralyzing the European Union. Only a month ago, the first Zed outbreak from the original KILLING FLOOR ripped through London; now the specimen clones are everywhere.",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "ghcr.io/parkervcp/steamcmd:debian": "ghcr.io/parkervcp/steamcmd:debian"
    },
    "file_denylist": [],
    "startup": "/home/container/Binaries/Win64/KFGameSteamServer.bin.x86_64 {{MAP_NAME}}?Port={{SERVER_PORT}}?QueryPort={{QUERY_PORT}}?AdminPassword={{ADMIN_PASS}}?Difficulty={{DIFFICULTY}}$( [ \"$WEB_ADMIN\" == \"true\" ] || printf %s '??WebAdminPort={{WEB_ADMIN_PORT}}' )",
    "config": {
        "files": "{\r\n    \"KFGame/Config/KFWeb.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"bEnabled\": \"benabled={{server.build.env.WEB_ADMIN}}\",\r\n            \"ListenPort\": \"ListenPort={{server.build.env.WEB_ADMIN_PORT}}\"\r\n        }\r\n    },\r\n    \"KFGame/Config/LinuxServer-KFGame.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"AdminPassword\": \"AdminPassword={{server.build.env.ADMIN_PASS}}\",\r\n            \"ServerName\": \"ServerName={{server.build.env.SERVER_NAME}}\"\r\n        }\r\n    }\r\n}",
        "logs": "{}",
        "startup": "{\r\n    \"done\": \"DevOnline: Playfab server registered with lobby ID \"\r\n}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "container": "ghcr.io/parkervcp/installers:debian",
            "entrypoint": "bash",
            "script": "#!/bin/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: /mnt/server\r\n# Image to install with is 'ghcr.io/parkervcp/installers:debian'\r\n\r\n##\r\n#\r\n# Variables\r\n# STEAM_USER, STEAM_PASS, STEAM_AUTH - Steam user setup. If a user has 2fa enabled it will most likely fail due to timeout. Leave blank for anon install.\r\n# WINDOWS_INSTALL - if it's a windows server you want to install set to 1\r\n# SRCDS_APPID - steam app id found here - https://developer.valvesoftware.com/wiki/Dedicated_Servers_List\r\n# SRCDS_BETAID - beta branch of a steam app. Leave blank to install normal branch\r\n# SRCDS_BETAPASS - password for a beta branch should one be required during private or closed testing phases.. Leave blank for no password.\r\n# INSTALL_FLAGS - Any additional SteamCMD  flags to pass during install.. Keep in mind that steamcmd auto update process in the docker image might overwrite or ignore these when it performs update on server boot.\r\n# AUTO_UPDATE - Adding this variable to the egg allows disabling or enabling automated updates on boot. Boolean value. 0 to disable and 1 to enable.\r\n#\r\n ##\r\n\r\n# Install packages. Default packages below are not required if using our existing install image thus speeding up the install process.\r\n#apt -y update\r\n#apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd /tmp\r\nmkdir -p /mnt/server/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C /mnt/server/steamcmd\r\nmkdir -p /mnt/server/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd /mnt/server/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root /mnt\r\nexport HOME=/mnt/server\r\n\r\n## install game using steamcmd\r\n./steamcmd.sh +force_install_dir /mnt/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] \u0026\u0026 printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p /mnt/server/.steam/sdk32\r\ncp -v linux32/steamclient.so ../.steam/sdk32/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p /mnt/server/.steam/sdk64\r\ncp -v linux64/steamclient.so ../.steam/sdk64/steamclient.so\r\n\r\n## add below your custom commands if needed\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\""
        }
    },
    "variables": [
        {
            "name": "Steam Username",
            "description": "A steam username to use to install the server.\r\n\r\nOnly needed for games that need a user that owns the server",
            "env_variable": "STEAM_USER",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Steam Password",
            "description": "Password for the Steam account to install a server.",
            "env_variable": "STEAM_PASS",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Steam Auth",
            "description": "Will most likely time out before it gets used.",
            "env_variable": "STEAM_AUTH",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string|max:6",
            "field_type": "text"
        },
        {
            "name": "Steam Server App ID",
            "description": "The App ID for the Server",
            "env_variable": "SRCDS_APPID",
            "default_value": "232130",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:232130",
            "field_type": "text"
        },
        {
            "name": "Extra Flags",
            "description": "Only needed for specific situations.",
            "env_variable": "EXTRA_FLAGS",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Map Name",
            "description": "The map to load when the server starts\r\n\r\ndefault - 'kf-bioticslab'",
            "env_variable": "MAP_NAME",
            "default_value": "kf-bioticslab",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Query Port",
            "description": "The port steam will use to query the server.",
            "env_variable": "QUERY_PORT",
            "default_value": "27015",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|numeric|max:65535",
            "field_type": "text"
        },
        {
            "name": "Enable WebAdmin (beta)",
            "description": "",
            "env_variable": "WEB_ADMIN",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|in:true,false",
            "field_type": "text"
        },
        {
            "name": "Admin Password",
            "description": "An admin password for the server.",
            "env_variable": "ADMIN_PASS",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Server Name",
            "description": "This is the displayed server name to all players in the server and the server browser",
            "env_variable": "SERVER_NAME",
            "default_value": "A Pterodactyl Hosted Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Server Difficulty",
            "description": "0 = Normal, 1 = Hard, 2 = Suicidal, 3 = Hell on Earth",
            "env_variable": "DIFFICULTY",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|numeric|in:0,1,2,3",
            "field_type": "text"
        },
        {
            "name": "Web Admin Port",
            "description": "The port the webadmin panel should use. This is a beta feature.",
            "env_variable": "WEB_ADMIN_PORT",
            "default_value": "8089",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Auto update the server on startup.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        }
    ]
}