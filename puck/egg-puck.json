{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": null
    },
    "exported_at": "2025-07-14T10:51:28+00:00",
    "name": "Puck",
    "author": "quinten@pelican.dev",
    "uuid": "cb8bee98-eefa-4190-8a21-c58e29373bfd",
    "description": "Fast-paced physics-based hockey simulation where precision, strategy, and chaos collide. Control every move, pass, and shot with realistic puck physics, dynamic player movement, and thrilling gameplay. Master the rink with friends or team up with other Puck players for ultimate hockey dominance! ",
    "tags": [],
    "features": [],
    "docker_images": {
        "Steamcmd Dotnet": "ghcr.io\/parkervcp\/steamcmd:dotnet"
    },
    "file_denylist": [],
    "startup": ".\/Puck.x86_64",
    "config": {
        "files": "{\n    \"server_configuration.json\": {\n        \"parser\": \"json\",\n        \"find\": {\n            \"port\": \"{{server.allocations.default.port}}\",\n            \"pingPort\": \"{{server.environment.PING_PORT}}\",\n            \"name\": \"{{server.environment.SERVER_NAME}}\",\n            \"maxPlayers\": \"{{server.environment.MAX_PLAYERS}}\",\n            \"password\": \"{{server.environment.PASSWORD}}\"                                                 \n        }\n    }\n}",
        "startup": "{\n    \"done\": \"UDP socket started on port\"\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\n## add below your custom commands if needed\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/pelican-eggs\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "sort": 2,
            "name": "Auto Update",
            "description": "Auto update the server on start",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "boolean"
            ]
        },
        {
            "sort": 5,
            "name": "Max Players",
            "description": "The maximum amount of players for the server",
            "env_variable": "MAX_PLAYERS",
            "default_value": "10",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "int",
                "min:1",
                "max:50"
            ]
        },
        {
            "sort": 6,
            "name": "Password",
            "description": "The server password",
            "env_variable": "PASSWORD",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string"
            ]
        },
        {
            "sort": 3,
            "name": "Ping Port",
            "description": "The server ping port",
            "env_variable": "PING_PORT",
            "default_value": "7778",
            "user_viewable": true,
            "user_editable": false,
            "rules": [
                "required",
                "numeric"
            ]
        },
        {
            "sort": 4,
            "name": "Server Name",
            "description": "",
            "env_variable": "SERVER_NAME",
            "default_value": "MY PUCK SERVER",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ]
        },
        {
            "sort": 1,
            "name": "App ID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "3481440",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "in:3481440"
            ]
        }
    ]
}