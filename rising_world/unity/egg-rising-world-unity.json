{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": null
    },
    "exported_at": "2025-02-19T20:41:35+00:00",
    "name": "Rising World Unity",
    "author": "eggs@goover.dev",
    "uuid": "aee8698f-35b9-4853-a2e2-f462d27c8e97",
    "description": "Rising World is a voxel based open-world sandbox game, featuring a procedurally generated world, playable in single and multi-player.",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "ghcr.io\/parkervcp\/games:source": "ghcr.io\/parkervcp\/games:source"
    },
    "file_denylist": [],
    "startup": ".\/RisingWorldServer.x64 +Server_Port={{SERVER_PORT}}",
    "config": {
        "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"Server_Name=\": \"Server_Name={{server.environment.SRV_NAME}}\",\r\n            \"Server_Password=\": \"Server_Password={{server.environment.SRV_PW}}\",\r\n            \"Password=\": \"Password={{server.environment.SRV_PW}}\",\r\n            \"World_GameMode=\": \"World_GameMode={{server.environment.GAME_MODE}}\",\r\n            \"World_Name=\": \"World_Name={{server.environment.WORLD_NAME}}\",\r\n            \"RCON_Enabled=\": \"RCON_Enabled={{server.environment.RCON}}\",\r\n            \"RCON_Password=\": \"RCON_Password={{server.environment.RCON_PASS}}\",\r\n            \"RCON_Port=\": \"RCON_Port={{server.environment.RCON_PORT}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Dedicated server is ready!\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'ghcr.io\/parkervcp\/installers:debian'\r\n\r\n##\r\n#\r\n# Variables\r\n# STEAM_USER, STEAM_PASS, STEAM_AUTH - Steam user setup. If a user has 2fa enabled it will most likely fail due to timeout. Leave blank for anon install.\r\n# WINDOWS_INSTALL - if it's a windows server you want to install set to 1\r\n# SRCDS_APPID - steam app id found here - https:\/\/developer.valvesoftware.com\/wiki\/Dedicated_Servers_List\r\n# SRCDS_BETAID - beta branch of a steam app. Leave blank to install normal branch\r\n# SRCDS_BETAPASS - password for a beta branch should one be required during private or closed testing phases.. Leave blank for no password.\r\n# INSTALL_FLAGS - Any additional SteamCMD  flags to pass during install.. Keep in mind that steamcmd auto update process in the docker image might overwrite or ignore these when it performs update on server boot.\r\n# AUTO_UPDATE - Adding this variable to the egg allows disabling or enabling automated updates on boot. Boolean value. 0 to disable and 1 to enable.\r\n#\r\n ##\r\n\r\n# Install packages. Default packages below are not required if using our existing install image thus speeding up the install process.\r\napt -y update\r\napt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\nif [ -f \"$HOME\/server.properties\" ]; then\r\n  echo \"-----------------------------------------\"\r\n  echo \"server.properties found.\"\r\n  echo \"-----------------------------------------\"\r\nelse\r\n  echo \"-----------------------------------------\"\r\n  echo \"renaming server.example.properties\"\r\n  echo \"-----------------------------------------\"\r\n  mv \/mnt\/server\/server.example.properties \/mnt\/server\/server.properties\r\nfi\r\n\r\nrm -fR $HOME\/linux_screen.sh\r\nrm -fR $HOME\/linux_startscript.sh\r\n\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "SRCDS_APPID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "339010",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string",
                "max:20"
            ],
            "sort": 1
        },
        {
            "name": "SRCDS_BETAID",
            "description": "",
            "env_variable": "SRCDS_BETAID",
            "default_value": "unity",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string",
                "max:20"
            ],
            "sort": 2
        },
        {
            "name": "LD_LIBRARY_PATH",
            "description": "",
            "env_variable": "LD_LIBRARY_PATH",
            "default_value": "\/linux64",
            "user_viewable": false,
            "user_editable": false,
            "rules": [
                "required",
                "string",
                "max:20"
            ],
            "sort": 3
        },
        {
            "name": "Server Name",
            "description": "Server name (shows up in server list)",
            "env_variable": "SRV_NAME",
            "default_value": "Pterodactyl hosted Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:40"
            ],
            "sort": 4
        },
        {
            "name": "Server Password",
            "description": "Server password. If set, users are prompted to enter the pw to join the server. Leave blank for no pw",
            "env_variable": "SRV_PW",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable"
            ],
            "sort": 5
        },
        {
            "name": "Game Mode",
            "description": "Default world game mode (only used when a new world is created). Either \"Survival\" or \"Creative\"",
            "env_variable": "GAME_MODE",
            "default_value": "Survival",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "nullable",
                "string",
                "in:,Survival,Creative"
            ],
            "sort": 6
        },
        {
            "name": "World Name",
            "description": "Name of the world which should be loaded (if it does not exist, it will be created)",
            "env_variable": "WORLD_NAME",
            "default_value": "myworld",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:20"
            ],
            "sort": 7
        },
        {
            "name": "[Advanced] Enable RCON",
            "description": "Determines whether or not the RCON tool should be enabled",
            "env_variable": "RCON",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "in:true,false"
            ],
            "sort": 8
        },
        {
            "name": "[Advanced] RCON Password",
            "description": "Password required for RCON login. Min 6 characters (!)",
            "env_variable": "RCON_PASS",
            "default_value": "somepassword",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "min:6"
            ],
            "sort": 9
        },
        {
            "name": "[Advanced] RCON Port",
            "description": "Port used to connect to RCON. Must be allocated to the server for RCON to work.",
            "env_variable": "RCON_PORT",
            "default_value": "4253",
            "user_viewable": true,
            "user_editable": false,
            "rules": [
                "required",
                "integer",
                "between:1024,65536"
            ],
            "sort": 10
        },
        {
            "name": "Auto Update",
            "description": "Update the server on start\/restart",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "boolean"
            ],
            "sort": 11
        }
    ]
}